<?xml version="1.0" encoding="utf-8"?>
<docs>
  <doc id="solution">
    <desc>
      The Cmajor System Library consists of sixteen modules.
      The <a href="content/System.Base/index.html">System.Base</a> module constitutes a major part of the System Library.
    </desc>
  </doc>
  <doc id="System.Windows.Install">
    <desc>
      The System.Windows.Install module is a special module that takes care of installing the System and System.Windows libraries to cmajor/system/lib/&lt;backend>/&lt;config> directory.
      It contains no source code entities, but references the <ref>System.Windows</ref> module.
    </desc>
  </doc>
  <doc id="System.Windows">
    <desc>
      The System.Windows module provides interface to Windows API and contains support for Windows GUI applications.
      This library is linked with programs and libraries that have <strong>target=winguiapp</strong>, <strong>target=winapp</strong> or 
      <strong>target=winlib</strong> in a <em>.cmp</em> file.
    </desc>
    <details>
        <p>
        The <a href="../../../langref/langref.html#rule.target-declaration"><strong>target</strong></a> declaration is discussed here.
        </p>
    </details>
  </doc>

  <doc id="System">
    <desc>
      The System module acts as an umbrella module that references all other System Library modules except System.Windows module. It contains no source code entities.
      The System module is implicitly referenced by all user programs and libraries, so an explicit reference for any system library module is not needed.
      This library is linked with programs and libraries that have <strong>target=program</strong> or <strong>target=library</strong> in a <em>.cmp</em> file respectively.
    </desc>
  </doc>

  <doc id="System.XPath">
    <desc>
      The System.XPath module contains an implementation of the <a href="https://www.w3.org/TR/1999/REC-xpath-19991116/">XML Path Language</a> version 1.0 query engine.
    </desc>
    <details title="Example 1">
      This <a href="../../../code/xml/cmdoc/content/xpath_test/file/xpath_test.cm.html">xpath_test.cm</a> program shows how to read an XML document and then 
      evaluate an XPATH query with respect to the XML document and print the result as XML.
    </details>
    <details title="Example 2">
      This <a href="../../../code/xml/cmdoc/content/xpath_philosophers/file/xpath_philosophers.cm.html">xpath_philosophers.cm</a> program shows 
      how to parse an XML string to an XML document, evaluate an XPATH query and then retrieve data from XML elements.
    </details>
    <details title="Example 3">
      This <a href="../../../code/xml/cmdoc/content/xpath_socrates/file/xpath_socrates.cm.html">xpath_socrates</a> program is the same as above with a 
      different query expression.
    </details>
  </doc>
  <doc id="function_Evaluate_9BFC4966EFBA2E4968FEB78FE20F2809BB062B6C">
    <desc>
      Evaluates the given XPATH expression with respect to the given XML context node and returns the result.
      In case of an error returns an error result.
    </desc>
  </doc>
  <doc id="function_EvaluateToNodeSet_76B358731215A2E91165FB385F64C7BB6C3BDEE5">
    <desc>
      Evaluates the given XPATH expression with respect to the given XML context node and returns the node-set result.
      If the expression does not evaluate to a node-set, or other error occurs, returns an error result. 
    </desc>
  </doc>
  <doc id="class_FunctionLibrary_3C3160366A533D440EEA29B40E7A394901FDFC4F">
    <desc>
      The function library contains only a minimal set of XPath functions: <strong>boolean</strong>, <strong>number</strong>, <strong>string</strong>,
      <strong>last</strong>, <strong>position</strong> and <strong>count</strong>.
      </desc>
    <details>
      The implemented functions are:
      <ref>class_BooleanFunction_79F14FC3DFA8C47C2EE90BB7288F2D3E707DCAF4</ref>,
      <ref>class_NumberFunction_7E4C45FEF142926E9059C4B09CA72A9A0828E671</ref>,
      <ref>class_StringFunction_4D59657A7F0A08D5D3284630824612CC44636382</ref>,
      <ref>class_LastFunction_3FCC71B59BB2DFDDE80BD4B3983DCC778283862B</ref>,
      <ref>class_PositionFunction_0C9A78BCB749ECF886731E893B5D0D5DAD42D809</ref>, and
      <ref>class_CountFunction_679D9777A259BC791727E5FBAF786BD04AD81CC7</ref>.
    </details>
  </doc>
  <doc id="class_BooleanFunction_79F14FC3DFA8C47C2EE90BB7288F2D3E707DCAF4">
    <desc>
      <strong>Function:</strong> <em>boolean</em> <strong>boolean</strong>(<em>object</em>)
    </desc>
    <details>
      Implements the <a href="https://www.w3.org/TR/1999/REC-xpath-19991116/#function-boolean">boolean</a> conversion function.
    </details>
  </doc>
  <doc id="class_NumberFunction_7E4C45FEF142926E9059C4B09CA72A9A0828E671">
    <desc>
      <strong>Function:</strong> <em>number</em> <strong>number</strong>(<em>object</em>?)
    </desc>
    <details>
      Implements the <a href="https://www.w3.org/TR/1999/REC-xpath-19991116/#function-number">number</a> conversion function.
    </details>
  </doc>
  <doc id="class_StringFunction_4D59657A7F0A08D5D3284630824612CC44636382">
    <desc>
      <strong>Function:</strong> <em>string</em> <strong>string</strong>(<em>object</em>?)
    </desc>
    <details>
      Implements the <a href="https://www.w3.org/TR/1999/REC-xpath-19991116/#function-string">string</a> conversion function.
    </details>
  </doc>
  <doc id="class_LastFunction_3FCC71B59BB2DFDDE80BD4B3983DCC778283862B">
    <desc>
      <strong>Function:</strong> <em>number</em> <strong>last</strong>()
    </desc>
    <details>
      Implements the <a href="https://www.w3.org/TR/1999/REC-xpath-19991116/#function-last">last</a> function.
    </details>
  </doc>
  <doc id="class_PositionFunction_0C9A78BCB749ECF886731E893B5D0D5DAD42D809">
    <desc>
      <strong>Function:</strong> <em>number</em> <strong>position</strong>()
    </desc>
    <details>
      Implements the <a href="https://www.w3.org/TR/1999/REC-xpath-19991116/#function-position">position</a> function.
    </details>
  </doc>
  <doc id="class_CountFunction_679D9777A259BC791727E5FBAF786BD04AD81CC7">
    <desc>
      <strong>Function:</strong> <em>number</em> <strong>count</strong>(<em>node-set</em>)
    </desc>
    <details>
      Implements the <a href="https://www.w3.org/TR/1999/REC-xpath-19991116/#function-count">count</a> function.
    </details>
  </doc>

  <doc id="System.RegularExpressions">
    <desc>
      The System.RegularExpressions contains a minimal implementation of a regular expression matching engine.
    </desc>
    
    <details title="Example">
      This <a href="../../../code/cmdoc/content/sgrep/file/sgrep.cm.html">sgrep</a> program searches a regular expression pattern from the given text files.
    </details>
  </doc>
  <doc id="class_RegEx_FF045A8DB810B11A7E1838764E80BDB32C6C837F">
    <desc>
      Represents a regular expression pattern.
    </desc>
  </doc>
  <doc id="constructor_RegEx_048A5AC6F13DA9ED011823E2E2E8820225A196C8">
    <desc>
      Create a regular expression with given pattern and flags value <ref>enumeration_constant_none_C0C2B5C389DA6866156E078CBD2815B253260F4E</ref>.
    </desc>
  </doc>
  <doc id="constructor_RegEx_80C0AB8F118532186C3778D5E11AA9A69CD4EC01">
    <desc>
      Create a regular expression with given pattern and given <ref>enumerated_type_RegExFlags_B475C391A47B78CB03D5C030D0683E9138EAB603</ref>.
    </desc>
  </doc>
  <doc id="member_function_Matches_RegEx_59E97BBCEE02267BB93B3A7BDB2A90148DB9D40A">
    <desc>
      Returns true if the given input string matches the regular expression pattern, false otherwise.
    </desc>
    <details>
      The semantics and speed of this operation depends on the <ref>enumerated_type_RegExFlags_B475C391A47B78CB03D5C030D0683E9138EAB603</ref>
      the <ref>class_RegEx_FF045A8DB810B11A7E1838764E80BDB32C6C837F</ref> is created with.
    </details>
  </doc>
  <doc id="enumeration_constant_none_C0C2B5C389DA6866156E078CBD2815B253260F4E">
    <desc>
      A pattern is represented as an <ref>class_Nfa_5E23E7BB511DC9602941611B6CE87476EC3ECB57</ref> and must match entire input string.
    </desc>
  </doc>
  <doc id="enumeration_constant_matchLine_86F5C14C55A1DF6ED6787EE3A8F01DFC60833D02">
    <desc>
      Matches any occurrence of a pattern in a whole line of text.
    </desc>
  </doc>
  <doc id="enumeration_constant_compiled_51AC04093DD5516D5BFEC9ED9F57FA973F8DA6D2">
    <desc>
      Compile pattern to a <ref>class_Dfa_C0C2BE49FCC3D3B6EA837CF206D1FE18B6C3B39E</ref>.
    </desc>
  </doc>

  <doc id="System.Net.Sockets">
    <desc>
      The System.Net.Sockets module provides client and server-side synchronous network socket connections.
    </desc>
    <details>
      There are limitations with the server-side sockets: they do not support HTTPS connections and they do not scale to thousands of connections
      or more because lack of asynchrony. The programming model is thread per client.
    </details>
  </doc>
  <doc id="class_TcpSocket_B38B3FFF6145E508D0B49BC2B9D97F255711ED1C">
    <desc>
      Represents a synchronous reliable connection-oriented socket.
    </desc>
  </doc>
  <doc id="class_TcpListener_113AF33A61527FBDFBFD58155CAD89A443C91B0B">
    <desc>
      Represents a server-side socket that can be used to listen and accept client connections.
    </desc>
  </doc>
  
  <doc id="ns_System.Threading.Fibers">
    <desc>
       Contains support for fibers that are stackful explicitly scheduled coroutines.
    </desc>
    <details title="Example">
      This <a href="../../../../code/cmdoc/content/FiberTest/file/FiberTest.cm.html">example program</a> shows how fibers can be used.
    </details>
  </doc>

  <doc id="System.Json">
    <desc>
      The System.Json module contains support for <a href="https://www.json.org/">JSON</a> serialization.
    </desc>
  </doc>
  <doc id="concept_JsonValueType_6519CA3F247A823EA53E9BBD4C42E505C0A78F5D">
    <desc>
      Primitive types <strong>int</strong>, <strong>long</strong>, etc. are <strong>JsonValueType</strong>s, as are
      <ref>aliasType_string_B6DB6B2DEFC437FBF697A2E84F7B7771FC1DDEE3</ref>, <ref>aliasType_wstring_EDB6336488DF46A7779AFB4209BAB1DAF59B5DAE</ref> and
      <ref>aliasType_ustring_1750E1C62AAF5897C1F1DA3C5BC4999982AE9B36</ref>.
    </desc>
  </doc>
  <doc id="member_function_ToString_JsonValue_0E8D02CC91EA26B2A9A8AF1C11DF12FD5FE86F31">
    <desc>
      Converts a <strong>JsonValue</strong> to a <a href="https://www.json.org/">JSON</a> string.
    </desc>
  </doc>
  <doc id="function_ParseJson_DBF1730C39BEE47518DDF489C3C1CA7CC4D29DFF">
    <desc>
      Converts a <a href="https://www.json.org/">JSON</a> string to a <ref>class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A</ref>.
    </desc>
  </doc>
  <doc id="function_ParseJson_AA1EB3D4CCCAA45FDB88817F137BB8925D3738A7">
    <desc>
      Converts a <a href="https://www.json.org/">JSON</a> string to a <ref>class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A</ref>.
    </desc>
  </doc>
  <doc id="function_ParseJson_2F088677CC9179ED41188E987956FF77EB3BEDB4">
    <desc>
      Converts a <a href="https://www.json.org/">JSON</a> string to a <ref>class_JsonValue_B86942C2856CC5758E1FB19BBBE97E4002D4008A</ref>.
    </desc>
  </doc>

  <doc id="System.IO.Compression">
    <desc>
      The System.IO.Compression module contains data compression/decompression streams.
      It is implemented by means of the <a href="http://www.zlib.net/">zlib</a> library.
    </desc>
    <details title="Example">
      This <a href="../../../code/cmdoc/content/deflate/file/main.cm.html">deflate</a> program compresses a file using
      <ref>class_DeflateStream_050C0EA929943E375A089D8EAE56F631A87D3306</ref> or extracts a file compressed using
      <ref>class_DeflateStream_050C0EA929943E375A089D8EAE56F631A87D3306</ref>.
    </details>
  </doc>

  <doc id="System.Dom">
    <desc>
      The System.Dom module contains basic implementation of the
      <a href="https://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/">Document Object Model Core</a> specification.
    </desc>
    <details>
      It does not follow strictly W3C DOM naming conventions.
    </details>
    <details title="Example 1">
      <a href="../../../code/xml/cmdoc/content/dom/file/dom.cm.html">This</a> example program shows how to parse an XML document
      and write its contents to console.
    </details>
    <details title="Example 2">
     This <a href="../../../code/xml/cmdoc/content/dom_rw/file/dom_rw.cm.html">dom_rw</a> program shows how to 
     create an in-memory XML document, write it to a UTF-8 encoded text file, read it back from the text file and write it to console.
    </details>
  </doc>
  <doc id="class_Document_8C627AEE0730B4B7B6AA76D126B58C9FF0BD5EDC">
    <desc>
      Represents an in-memory XML or XHTML document.
    </desc>
  </doc>
  <doc id="function_ParseXmlDocumentContent_2F3D62A010034F4ED92746BAD05393D84DECF925">
    <desc>
      Parses a UTF-8 encoded XML string to a <ref>class_Document_8C627AEE0730B4B7B6AA76D126B58C9FF0BD5EDC</ref> and returns it.
    </desc>
    <details>
      The given <strong>systemId</strong> parameter is used for error reporting only and will occur in the possible error message.
      If the XML string is not syntactically valid, the function returns an error result.
      If the XML string is not otherwise well-formed, the function returns an error result.
    </details>
  </doc>
  <doc id="function_ParseXmlDocument_11C5F4532C29497DA2F3ADDE83B9EDB70D857939">
    <desc>
      Parses a UTF-8 encoded XML file to a <ref>class_Document_8C627AEE0730B4B7B6AA76D126B58C9FF0BD5EDC</ref> and returns it.
    </desc>
    <details>
      If the XML file is not syntactically valid, the function returns an error result.
      If the XML file is not otherwise well-formed, the function returns an error result.
    </details>
  </doc>
  <doc id="member_function_GetAttribute_Element_3CBC44977C67BC4D84F3A77F17EBB8453ADFD444">
    <desc>
      Returns the value of an attribute if it exists and empty string otherwise.
    </desc>
  </doc>

  <doc id="System.Xml">
    <desc>
      The System.Xml module contains an implementation of a non-validating <a href="http://www.w3.org/TR/xml/">XML</a> parser and a
      <a href="http://en.wikipedia.org/wiki/Simple_API_for_XML">SAX</a>-like API to it.
    </desc>
    <details>
      The parser accepts full XML 1.0 syntax including a DTD (modulo bugs) but does not process contained DTD in any way.
      It recognizes only standard XML entities <em>&amp;amp;</em>, <em>&amp;quot;</em>, <em>&amp;apos;</em>, <em>&amp;lt;</em> and <em>&amp;gt;</em>.
      Other entities are skipped and the <ref>member_function_SkippedEntity_XmlContentHandler_DE473F7932700694C4861AB6FCB14554A9598964</ref>
      member function of the content handler is called for each of them.
    </details>
    <details>
      The <ref>function_ParseXmlFile_C7306F811CB6EF48E31E6269B9AE90BAB4C64896</ref> function parses the given XML file with a content handler.
      As XML file is parsed, the overridden methods of user supplied class derived from the <ref>class_XmlContentHandler_7429223FCBE3A541F14FD9475F2099B20E248715</ref>
      class are called. If the XML document need to be manipulated entirely in memory, it can be parsed with the
      <ref>function_ParseXmlDocument_11C5F4532C29497DA2F3ADDE83B9EDB70D857939</ref> function instead.
    </details>
    <details title="Example">
      This <a href="../../../code/xml/cmdoc/content/xmlstats/file/xmlstats.cm.html">xmlstats</a> example program prints statistics of an XML file.
    </details>
  </doc>

  <doc id="System.Parsing">
    <desc>
      The System.Parsing module contains parsing helper classes.
    </desc>
  </doc>
  
  <doc id="System.Lex">
    <desc>
      The System.Lex module contains lexical analyzer engine and lexing utilities.
    </desc>
  </doc>
  <doc id="class_Span_BD14F38E21FE17B2F59D2E90BFB5D984755F9267">
    <desc>
      Represents a span of text during and after parsing.
    </desc>
  </doc>
  <doc id="class_FileMap_00D83B1C90CC59AC4180663F35CB02A6FD057151">
    <desc>
      A utility class for maintaining a mapping from a file index to a file name.
      Also can be used for maintaining a mapping from a file index to a contents of a source text file represented as a <ref>class_SourceFile_A569605C01F5CA27D47A3A02B17A80A76E51D822</ref>.
    </desc>
    <details>
      When a parsing function needs a file map parameter, you can give a default-constructed file map as an argument.
      The parsing function will add the file name and file contents to the file map.
    </details>
  </doc>
  <doc id="member_function_MapFileName_FileMap_17CBED6EABA1F0A0E7DB9163E4D6D5917B144268">
    <desc>
       Adds a file name to a list of file names and returns its index.
    </desc>
  </doc>
  <doc id="member_function_AddSourceFile_FileMap_8A0999C4795DCCED9275A98984C56BDF08C959DD">
    <desc>
      Adds the contents of a source text file to a (file index, <ref>class_SourceFile_A569605C01F5CA27D47A3A02B17A80A76E51D822</ref>) map.
    </desc>
  </doc>
  <doc id="member_function_GetSourceFile_FileMap_351A22FC4F12F5B4CA755326EDDCC74F8E2E4829">
    <desc>
      Returns a pointer to a source file associated with a file index. If a source file for a given file index is not found, returns null.
    </desc>
  </doc>
  
  <doc id="System.Xml.Serialization">
	<desc>
	 The System.Xml.Serialization module contains library support for XML serialization.
	</desc>
	<details>
	  See <a href="../../../xml_serialization/xml_serialization.html">XML serialization</a> document for usage examples.
	</details>
  </doc>

  <doc id="System.Base">
    <desc>
      The System.Base module contains basic facilities, containers, algorithms, and I/O.
    </desc>
  </doc>
  <doc id="class_ErrorId_0E4B2140259AADB7DB40D7239F8FEA3526DD7F6B">
    <desc>
      Represents an error identifier.
    </desc>
    <details>
      The error id value can be obtained by calling the <ref>function_AllocateError_27780819118D9E1EC6A4C3BAB4F5B144785CC456</ref> function. 
    </details>
  </doc>
  <doc id="class_Result_04842AB1C9F4CA1EAD0D7305C26153EEAE534E78">
    <desc>
      Represents either an expected function return value of type T or an error result.      
    </desc>
  </doc>
  <doc id="constructor_Result_180DCE55562CA5F4DA45580226198E172402C1E7">
    <desc>
      Use this constructor when constructing an error result. 
    </desc>
    <details>
      The error id can be obtained by calling the <ref>function_AllocateError_27780819118D9E1EC6A4C3BAB4F5B144785CC456</ref> function. 
    </details>
  </doc>
  <doc id="constructor_Result_127474B682C86342EB1948328E1D19D34E21F263">
    <desc>
      Constructs an expected function result.
    </desc>
  </doc>
  <doc id="constructor_Result_5442F5D8157B8EFA5BDE426ABE4051B6757CCD01">
    <desc>
      Constructs an expected function result.
    </desc>
  </doc>
  <doc id="function_AllocateError_27780819118D9E1EC6A4C3BAB4F5B144785CC456">
    <desc>
      Allocates an error id and associates it with the specified error message. Returns the allocated error id.
    </desc>
    <details>
      You can obtain the error message associated with an error id by calling the <ref>function_GetErrorMessage_4F8BE3DCC0B9CAF44A246661780447184CBEEC91</ref> function.
    </details>
  </doc>
  <doc id="function_GetErrorMessage_4F8BE3DCC0B9CAF44A246661780447184CBEEC91">
    <desc>
      Gets an error message associated with an error id.
    </desc>
    <details>
      The error message will contain a stack trace on debug builds.
    </details>
  </doc>
  <doc id="member_function_Error_Result_B003457B7051E2B567FD3A8C392B6448A609CD5A">
    <desc>
      Returns true if the result represents an error result and false otherwise.
    </desc>        
    <details>
      An error result will have an error id that is a positive integer.
      A successful result will have an error id that is zero.
    </details>
  </doc>
  <doc id="member_function_GetErrorId_Result_544DAE1573CDBA0F3EBFAA27421D7C3FCEB0BFEB">
    <desc>
      Returns the contained error id. 
    </desc>
    <details>
        A positive error id indicates error. A zero error id indicates success.
    </details>
  </doc>
  <doc id="member_function_SetErrorId_Result_28864A901366526BA820BA21713D38EAA6FBA2AA">
    <desc>
      Sets the contained error id.
    </desc>
  </doc>
  <doc id="member_function_GetErrorMessage_Result_3398AF48FF6871CE07D8602497C95049EFF7965B">
    <desc>
      Returns the error message associated with the error id.
    </desc>
    <details>
      The error message will contain a stack trace on debug builds.
    </details>
  </doc>
  <doc id="member_function_Value_Result_6B212DC641E37E1AADE44E0A58D7C2F1E3CA7E1D">
    <desc>
      Returns the expected return value.
    </desc>
  </doc>
  <doc id="member_function_Value_Result_BEA160CA481B9C2B7EF5A04232C68B3762FC6C35">
    <desc>
      Returns the expected return value.
    </desc>
  </doc>
  <doc id="member_function_AndThen_Result_512E0262CA0F74EA43585B1EE500A86B2630CD7A">
    <desc>
      If the result represented by this result is an error result, returns this result.
      Otherwise returns the second result.
    </desc>
  </doc>
  <doc id="aliasType_string_B6DB6B2DEFC437FBF697A2E84F7B7771FC1DDEE3">
    <desc>
      Represents a UTF-8 or ASCII encoded string.
    </desc>
  </doc>
  <doc id="aliasType_wstring_EDB6336488DF46A7779AFB4209BAB1DAF59B5DAE">
    <desc>
      Represents a UTF-16 encoded string.
    </desc>
  </doc>
  <doc id="aliasType_ustring_1750E1C62AAF5897C1F1DA3C5BC4999982AE9B36">
    <desc>
      Represents a UTF-32 encoded string.
    </desc>
  </doc>
  <doc id="member_function_CreateText_File_2EF9CAB30DD21BABC54A82CCB9FF835510E74DC2">
    <desc>
      Creates a UTF-8 encoded text file.
    </desc>
  </doc>
  <doc id="member_function_AppendText_File_643A8FED35EB760E56C6629EF3A3EE6E7F96215F">
    <desc>
      Opens a UTF-8 encoded text file for appending.
    </desc>
  </doc>
  <doc id="member_function_CreateBinary_File_5A4B549AD41ABE0BCEA7A20302A5E25BD0EC1ADD">
    <desc>
      Creates a binary file.
    </desc>
    <details>
      Integers are written in big-endian byte order. Strings are written UTF-8 encoded and zero byte terminated.
    </details>
  </doc>
  <doc id="member_function_OpenBinary_File_2EEB4F10A5AC3B2E46AC66A79EEDF83EA7A16170">
    <desc>
      Opens a binary file for reading.
    </desc>
    <details>
      Integers are expected to be in big-endian byte order. Strings are expected to be UTF-8 encoded and zero byte terminated.
    </details>
  </doc>
  <doc id="member_function_Size_File_D0C8D1E0A218CED6BEA5F44A50BDDFE2468A29CA">
    <desc>
      Returns the size of the given file.
    </desc>
    <details>
      If the file does not exist, or in case of other error returns an error result.
    </details>
  </doc>
  <doc id="member_function_OpenRead_File_E47873D844B9D94ACA693A28F299A0CCF71AD6B6">
    <desc>
      Opens a UTF-8 encoded text file for reading.
    </desc>
  </doc>
  <doc id="member_function_Exists_File_FC6BD11DC4C17349F599B2729C5A76449EDB46F3">
    <desc>
      Returns result containing true, if the given file exists and result containing false otherwise.
      In case of an error returns an error result.
    </desc>
  </doc>
  <doc id="member_function_LastWriteTimeLess_File_2A1F7CAC91487015802222F0432A9071D3DA8880">
    <desc>
      Returns true if the last write time of the first file is less than the last write time of the second file, and false otherwise.
    </desc>
  </doc>
  <doc id="member_function_ReadAllLines_File_DC86B4CEA779764618F3663F4CC2710BDFCAA04E">
    <desc>
      Reads all lines of the given UTF-8 encoded text file into a <ref>class_List_C2E3BBDCA5D627AF0AC4163C9A548892D736E894</ref> of
      <ref>aliasType_string_B6DB6B2DEFC437FBF697A2E84F7B7771FC1DDEE3</ref>s and returns the list.
    </desc>
    <details>
      Each line in the file is represented as a UTF-8 encoded string without a newline terminator.
      Skips a possible BOM (byte order mark) at the start of the file.
    </details>
  </doc>
  <doc id="member_function_ReadAllText_File_BF69423F5ECED3BABCA2932C268CBA63196E46E4">
    <desc>
      Reads the contents of a UTF-8 encoded text file into a string and returns it.
    </desc>
    <details>
      Each newline in the file is represented as a single linefeed character in the returned string.
      Skips a possible BOM (byte order mark) at the start of the file.
    </details>
  </doc>
  <doc id="function_ToUtf8_0F1024A368A6DA5AA49229F7B5E77D3EC9DE4036">
    <desc>
      Converts a UTF-32 string to a UTF-8 string.
      If an invalid UTF-32 code point is encountered, returns an error result.
    </desc>
  </doc>
  <doc id="function_ToUtf8_63916ECE0F4D6130E20FDD15D7F1BFF840F53865">
    <desc>
      Converts a UTF-16 string to a UTF-8 string.
      If an invalid UTF-16 byte sequence is encountered, returns an error result.
    </desc>
  </doc>
  <doc id="function_ToUtf16_A5E06C63CBAF22CA84A880EB5BB51269C6BE4257">
    <desc>
      Converts a UTF-8 (or 7-bit ASCII) string to a UTF-16 string.
      If an invalid UTF-8 byte sequence is encountered, returns an error result.
    </desc>
  </doc>
  <doc id="function_ToUtf16_F2521751AB2A1E1F18C4047AC49CAEAE9CF2EDC6">
    <desc>
      Converts a UTF-32 string to a UTF-16 string.
      If an invalid UTF-32 code point is encountered, returns an error result.
    </desc>
  </doc>
  <doc id="function_ToUtf32_0476C1B2C07579259DF76F80D2F2987EA2B8EFDD">
    <desc>
      Converts a UTF-8 (or 7-bit ASCII) string to a UTF-32 string.
      If an invalid UTF-8 byte sequence is encountered, returns an error result.
    </desc>
  </doc>
  <doc id="function_ToUtf32_591A6A903DC5D15ED167D4844BC2864FC446614A">
    <desc>
      Converts a UTF-16 string to a UTF-32 string.
      If an invalid UTF-16 byte sequence is encountered, returns an error result.
    </desc>
  </doc>
  <doc id="member_function_Read_ByteStream_026763BB61037CC329F0EC41074406529C920B49">
    <desc>
      Reads at most <strong>count</strong> bytes into <strong>buf</strong> and returns the number of bytes read.
      If an error is detected, returns an error result.
    </desc>
  </doc>
  <doc id="member_function_ReadByte_ByteStream_00F33B1B22C620EA630EFF170682AF0914E4E568">
    <desc>
      Reads one byte from the stream. Returns the byte read, or -1 if end of stream is encountered.
      If an error is detected, returns an error result.
    </desc>
  </doc>
  <doc id="member_function_Write_ByteStream_B16019C1887E69858F8B4AADB6B9CE65537722E2">
    <desc>
      Writes a byte to the stream. 
      If an error is detected, returns an error result.
    </desc>
  </doc>
  <doc id="member_function_Write_ByteStream_E19BFE5AE2C372D12C30E7858F26083DF778BC5D">
    <desc>
      Writes <strong>count</strong> bytes from <strong>buf</strong> to the stream. If an error is detected, // TODO
    </desc>
  </doc>
  <doc id="member_function_Flush_ByteStream_B359C6583A0F7B15600ACAFE7CAC23020693AEBB">
    <desc>
      If there's buffered data, writes it to the stream. Otherwise does nothing.
    </desc>
  </doc>
  <doc id="member_function_CopyTo_ByteStream_0492E0CBFB6B3F30EF00802A23577E7067B981A0">
    <desc>
      Copies the rest of the stream starting from current stream position to a destination stream using a 16K buffer.
    </desc>
  </doc>
  <doc id="member_function_CopyTo_ByteStream_09F8EA0997885DD83562B277CD430D46040BB611">
    <desc>
      Copies the rest of the stream starting from current stream position to a destination stream using a buffer with the given size.
    </desc>
  </doc>
  <doc id="member_function_Tell_ByteStream_163EFD5A892885A5804810B26BDF0BA74083B8D7">
    <desc>
      Returns the current stream position, if this stream type supports it. Otherwise // TODO
    </desc>
  </doc>
  <doc id="member_function_Seek_ByteStream_6127E9DEF97F05A69D099D8E1CED2CCA9FD5F9B3">
    <desc>
      Sets the current stream position, if this stream type supports it. Otherwise // TODO
    </desc>
  </doc>
  <doc id="class_Stream_5B86812CFF4EC38459E63BA53D90E1A7AEE57A5B">
    <desc>
      Represents a stream of bytes.
    </desc>
  </doc>
  <doc id="class_StreamWriter_40A39F418049D49DB679452BB514CDFE47500311">
    <desc>
      Writes character data to a <ref>class_Stream_5B86812CFF4EC38459E63BA53D90E1A7AEE57A5B</ref> using UTF-8 encoding.
    </desc>
  </doc>
  <doc id="class_StreamReader_8A8267CD81BA8B198AF295474A8CB0B2DFBB7B57">
    <desc>
      Reads character data from a <ref>class_Stream_5B86812CFF4EC38459E63BA53D90E1A7AEE57A5B</ref>. The data is expected to be UTF-8 encoded.
    </desc>
  </doc>
  <doc id="class_BinaryWriter_6D47712E9CF8C098A17FFF3729140EE727BD87E2">
    <desc>
      Writes binary data to a <ref>class_Stream_5B86812CFF4EC38459E63BA53D90E1A7AEE57A5B</ref> using big-endian byte order.
    </desc>
  </doc>
  <doc id="class_BinaryReader_7D0A41A9C666814155001B1AF5B066E926C8F3AC">
    <desc>
      Reads binary data from a <ref>class_Stream_5B86812CFF4EC38459E63BA53D90E1A7AEE57A5B</ref>. The data is expected to be in big-endian byte order.
    </desc>
  </doc>
  <doc id="class_CodeFormatter_38898A0914E7D27753F0D42E65A18EC272984F99">
    <desc>
      Writes indented text to a stream using a <ref>class_TextWriter_95D72C37DDCBB941FE8EC41FF28270B9FFB782C1</ref>.
    </desc>
  </doc>
  <doc id="function_Trim_4EC105640B060F96EB3BC9E288DE7D1624DCC838">
    <desc>
      Returns a copy of a string where leading and trailing white space is removed.
    </desc>
  </doc>
  <doc id="function_Trim_CA0D04404C5B8206637F0F564509D2C0A091EFD1">
    <desc>
      Returns a copy of a string where leading and trailing white space is removed.
    </desc>
  </doc>
  <doc id="function_Trim_A64760453672C5C36233CE34B42296B97AD7A38E">
    <desc>
      Returns a copy of a string where leading and trailing white space is removed.
    </desc>
  </doc>
  <doc id="function_TrimAll_F86F15A4C02B4AC30D37E4FDBE78C555E22A7CB3">
    <desc>
      Returns a copy of string where leading and trailing white space is removed and multiple white space inside the string is replaced with a single space.
    </desc>
  </doc>
  <dod id="function_TrimAll_E5E00E8C8C13010DA073A47CC153B80CF3F6EF1E">
    <desc>
      Returns a copy of string where leading and trailing white space is removed and multiple white space inside the string is replaced with a single space.
    </desc>
  </dod>
  <doc id="function_TrimAll_25DE3A4DE5747983C7DD5859BD758A5EF23D1DDC">
    <desc>
      Returns a copy of string where leading and trailing white space is removed and multiple white space inside the string is replaced with a single space.
    </desc>
  </doc>
  <doc id="function_Rvalue_FC16F1187C8C3CF8D9182A63AC59041EF4474FA2">
    <desc>
      Converts the argument to an rvalue so it can be moved.
    </desc>
  </doc>
  <doc id="function_InitRand_FC91A0646CA9E897EC03AF41DE040C0B0315FBE4">
    <desc>
      Sets the seed value of of the pseudo-random number generator for the calling thread.
      Does not have to be called unless a predetermined sequence of pseudo-random numbers are needed, because the seed is automatically initialized to a random value.
    </desc>
  </doc>
  <doc id="function_Random_9AE0308FDE26EB03E6FD7F87B12F37592F2456B1">
    <desc>
      Returns the next 32-bit pseudo-random number in a pseudo-random number sequence for the current thread.
    </desc>
  </doc>
  <doc id="function_Random64_9DEEEE38C35C0DA11DF1CF903C8F222BED1CD6AC">
    <desc>
      Returns the next 64-bit pseudo-random number in a pseudo-random number sequence for the current thread.
    </desc>
  </doc>
  <doc id="function_RandomNumber_72C28929E70B8FC171085189AB53F10692D84ACC">
    <desc>
      Returns a pseudo-random number less than the given value.
    </desc>
  </doc>
  <doc id="function_Execute_FF076B03434B686DC6063332FF53301AEDD256DB">
    <desc>
      Executes a given program with the given command line arguments and returns the exit code the program returned, or 1 if an error occurred.
    </desc>
  </doc>
  <doc id="function_Execute_79B22E2DDAEE6EE8DD1CE820EAE0D7EAF2BDA36E">
    <desc>
      Executes a given program with the given command line arguments and with given redirections.
    </desc>
    <details>
      Before executing the program given handles (typically 1-stdout, 2-stderr) are redirected to given file names.
      After executing the program the redirected handles are restored.
      Returns the exit code the program returned, or 1 if an error occurred.
    </details>
  </doc>
  <doc id="class_Console_41891B146EC51CAB04451732257B28BD18CAE52B">
    <desc>
      Represents standard I/O streams <strong>stdin</strong>, <strong>stdout</strong> and <strong>stderr</strong>.
    </desc>
  </doc>
  <doc id="class_UniquePtr_793F841C13E9DD3A6869243C74F1D948C0E04009">
    <desc>
      Represents a unique ownership smart pointer. Cannot be copied but can be moved.
    </desc>
  </doc>
  <doc id="class_SharedPtr_E2198BEF58335A9A782FD48D7E8DFFD1A2D8865F">
    <desc>
      Represents a shared ownership smart pointer. Keeps count of references to the underlying pointer and deletes it when the last shared pointer goes out of scope.
    </desc>
  </doc>
  <doc id="class_List_C2E3BBDCA5D627AF0AC4163C9A548892D736E894">
    <desc>
      Most fundamental container class. The list is like an array that can grow.
    </desc>
    <details>
      Elements can be added by copying (<ref>member_function_Add_List_51C2A75AC0C4BE9A235C82A41D1FE7EB542D8B78</ref>) or by 
      moving (<ref>member_function_Add_List_89752FEC74E129D30D43E6A2FF7EABB1710B8619</ref>). Adding takes amortized constant time.
      When moving you may want to use the <ref>function_Rvalue_1B3DB0610C3620EF4E68B21F93F01B306FF74562</ref> to convert an argument to an rvalue.
      Elements of a list can be accessed by index using the <ref>member_function_op_index_List_754A7E4287036F1DC5E6ED692F2CC7A9BE0031D1</ref> or
      <ref>member_function_op_index_List_8091A4E54B78EFDE17745646E466335F0CCDD76D</ref> member functions.
      Element access is <em>O(1)</em> operation.
    </details>
    <details>
      Model of <ref>concept_RandomAccessContainer_7D44EBDB629CA332A20056356A52519C0BB1FADF</ref>,
      <ref>concept_FrontInsertionSequence_6E92B081B326D22C296036E5DDC43365491BEBF4</ref>,
      <ref>concept_BackInsertionSequence_5885D2D8DDEC40D462924E37DCE754A8F36B52C2</ref>, and
      <ref>concept_InsertionSequence_5D1868A305E1B5BDA144AAB9338B802BCE110BE6</ref>.
    </details>
  </doc>
  <doc id="class_RandomAccessIter_9F7709A9CDA8A631401243519F438AE84A725134">
    <desc>
      Model of <ref>concept_RandomAccessIterator_A5A1B6A4EC8E181A67C733002B3BE437554D3484</ref>.
    </desc>
  </doc>
  <doc id="class_Negate_601951129A9208F4A372E2B7BBC4EAE820AD2ECB">
    <desc>
      Model of <ref>concept_UnaryFunction_DDD936ABC21BA268C3B3C9F4820F5DFE1ACAA344</ref>,
      <ref>concept_UnaryOperation_A42C7312D25FC827BE924605B8EB6CAF29F5668A</ref>.
    </desc>
  </doc>
  <doc id="class_Identity_AE4E1A34351D4CA127046281E036550E4FE428D6">
    <desc>
      Model of <ref>concept_UnaryFunction_DDD936ABC21BA268C3B3C9F4820F5DFE1ACAA344</ref>.
      <ref>concept_UnaryOperation_A42C7312D25FC827BE924605B8EB6CAF29F5668A</ref>.
    </desc>
  </doc>
  <doc id="class_Set_A458D7CE6492B895868A21E8F3D1FA98A8FFEAA3">
    <desc>
      A collection of unique elements that are kept sorted in a <ref>class_RedBlackTree_6F8AEDB2D8909F4D933AF0A25DEE14F445C64C1E</ref>.
    </desc>
    <details>
      Searching for an element in the set and inserting an element to the set are <em>Olog(n)</em> operations.
    </details>
    <details>
      Model of <ref>concept_BidirectionalContainer_05A591605B349EDF6FDA457C4C7B21759F8E2BC7</ref>.
    </details>
  </doc>
  <doc id="class_Map_5EAECC14EAC094F5DF9869C5DC52FED957926043">
    <desc>
      An associative array of key-value pairs that are kept sorted in a <ref>class_RedBlackTree_6F8AEDB2D8909F4D933AF0A25DEE14F445C64C1E</ref>.
    </desc>
    <details>
      Searching for an element in the map and inserting an element to the map are <em>Olog(n)</em> operations.
    </details>
    <details>
      Model of <ref>concept_BidirectionalContainer_05A591605B349EDF6FDA457C4C7B21759F8E2BC7</ref>.
    </details>
  </doc>
  <doc id="class_RedBlackTree_6F8AEDB2D8909F4D933AF0A25DEE14F445C64C1E">
    <desc>
      A red-black tree.
    </desc>
    <details>
      Model of <ref>concept_BidirectionalContainer_05A591605B349EDF6FDA457C4C7B21759F8E2BC7</ref>.
    </details>
  </doc>
  <doc id="class_RedBlackTreeNodeIterator_T_R_P_6B55278500271829D7E5F7BCD5A22DABD182EF92">
    <desc>
      Iterator type of a <ref>class_RedBlackTree_6F8AEDB2D8909F4D933AF0A25DEE14F445C64C1E</ref>.
    </desc>
    <details>
      Model of <ref>concept_BidirectionalIterator_96C10B73881A17B6DC9C0804E7DF2141C2E58DA6</ref>.
    </details>
  </doc>
  <doc id="class_HashtableIterator_T_R_P_H_096790EBD70A9327536FC43A710AF00FB8221CA1">
    <desc>
      Iterator type of a <ref>class_Hashtable_7F72CBB785DE76648BD6BC898866FE2884EA3EBE</ref>.
    </desc>
    <details>
      Model of <ref>concept_ForwardIterator_4C777D423CF589B8535F29F910C025990ED656D4</ref>.
    </details>
  </doc>
  <doc id="class_Hashtable_7F72CBB785DE76648BD6BC898866FE2884EA3EBE">
    <desc>
      A hashtable.
    </desc>
    <details>
      Model of <ref>concept_ForwardContainer_98A0A5CEE1E1C33CCABCFC2F31BF6EE7C21229F2</ref>.
    </details>
  </doc>
  <doc id="class_HashSet_96FD1A8AB2C77DDB74D29FB1E173D4D08CFD50A3">
    <desc>
      A collection of unique elements that are organized in a <ref>class_Hashtable_7F72CBB785DE76648BD6BC898866FE2884EA3EBE</ref>.
    </desc>
    <details>
      The elements need not be ordered, but you must be able to compare them for equality (<ref>class_EqualTo_FE4C0B1CEF8E306FE146F7BB46ED2BCED3E4472A</ref>)
      or other equality-like relation provided as the third template argument.
    </details>
    <details>
      The second template argument is a hash function object that is by default the
      <ref>class_Hasher_143039CB3C347B7A20C6FA497549273378B9575C</ref>
      function object that delegates the computation of the hash function for the element to one of the <ref>function_GetHashCode_BD15899CCA748FF443AF1574B768E8FF490F2011</ref>
      function overloads. If there is not a <em>GetHashCode</em> overload for the your element type, you can provide your own, and it should work with the standard
      <ref>class_Hasher_143039CB3C347B7A20C6FA497549273378B9575C</ref>.
    </details>
    <details>
      Adding an element to the hash set depends on the hash function, but can be thought as <em>O(1)</em> operation.
      Searching for an element in a hash set depends on the hash function, but can be thought as <em>O(1)</em> operation.
    </details>
    <details>
      Model of <ref>concept_ForwardContainer_98A0A5CEE1E1C33CCABCFC2F31BF6EE7C21229F2</ref>.
    </details>
  </doc>
  <doc id="class_Hasher_143039CB3C347B7A20C6FA497549273378B9575C">
    <desc>
      A hash function object that calls one of the <em>GetHashCode</em> function overloads with its argument.
    </desc>
    <details>
      Model of <ref>concept_HashFunction_996DE63476FF956BFF568F751960AF2CB4A097A8</ref>.
    </details>
  </doc>
  <doc id="class_HashMap_D555F9108F5700505E1FCCC02041016E58EE9314">
    <desc>
      An associative array of key-value pairs that are organized in a <ref>class_Hashtable_7F72CBB785DE76648BD6BC898866FE2884EA3EBE</ref>.
    </desc>
    <details>
      The elements need not be ordered, but you must be able to compare them for equality (<ref>class_EqualTo_FE4C0B1CEF8E306FE146F7BB46ED2BCED3E4472A</ref>)
      or other equality-like relation provided as the fourth template argument.
    </details>
    <details>
      The third template argument is a hash function object that is by default the
      <ref>class_Hasher_143039CB3C347B7A20C6FA497549273378B9575C</ref>
      function object that delegates the computation of the hash function for the element to one of the <ref>function_GetHashCode_BD15899CCA748FF443AF1574B768E8FF490F2011</ref>
      function overloads. If there is not a <em>GetHashCode</em> overload for the your element type, you can provide your own, and it should work with the standard
      <ref>class_Hasher_143039CB3C347B7A20C6FA497549273378B9575C</ref>.
    </details>
    <details>
      Adding an element to the hash map depends on the hash function, but can be thought as <em>O(1)</em> operation.
      Searching for an element in a hash map depends on the hash function, but can be thought as <em>O(1)</em> operation.
    </details>
    <details>
      Model of <ref>concept_ForwardContainer_98A0A5CEE1E1C33CCABCFC2F31BF6EE7C21229F2</ref>.
    </details>
  </doc>
  <doc id="class_LinkedList_21E6EE98B4B36A5C47A5B085A267CB263D18975A">
    <desc>
      A doubly linked list of elements.
    </desc>
    <details>
      Inserting an element to the linked list in a known position is <em>O(1)</em> operation.
      Searching for an element in a linked list is <em>O(n)</em> operation.
    </details>
    <details>
      Model of <ref>concept_BidirectionalContainer_05A591605B349EDF6FDA457C4C7B21759F8E2BC7</ref>,
      <ref>concept_FrontInsertionSequence_6E92B081B326D22C296036E5DDC43365491BEBF4</ref>,
      <ref>concept_BackInsertionSequence_5885D2D8DDEC40D462924E37DCE754A8F36B52C2</ref> and
      <ref>concept_InsertionSequence_5D1868A305E1B5BDA144AAB9338B802BCE110BE6</ref>.
    </details>
  </doc>
  <doc id="class_LinkedListNodeIterator_8295384D975538AF58E04CACCB241458E5E9892B">
    <desc>
      Iterator type of a <ref>class_LinkedList_21E6EE98B4B36A5C47A5B085A267CB263D18975A</ref>.
    </desc>
    <details>
      Model of <ref>concept_BidirectionalIterator_96C10B73881A17B6DC9C0804E7DF2141C2E58DA6</ref>.
    </details>
  </doc>
  <doc id="class_ForwardList_A99897CAB3009D26DA55AC8644BAE9940652F625">
    <desc>
      A singly linked list of elements.
    </desc>
    <details>
      Inserting an element to the forward list in a known position is <em>O(1)</em> operation.
      Searching for an element in a forward list is <em>O(n)</em> operation.
    </details>
    <details>
      Model of <ref>concept_ForwardContainer_98A0A5CEE1E1C33CCABCFC2F31BF6EE7C21229F2</ref> and
      <ref>concept_FrontInsertionSequence_6E92B081B326D22C296036E5DDC43365491BEBF4</ref>.
    </details>
  </doc>
  <doc id="class_ForwardListNodeIterator_7AAFDC28F05E51C20CA3EB8A7148DDD64A2EAF99">
    <desc>
      Iterator type of a <ref>class_ForwardList_A99897CAB3009D26DA55AC8644BAE9940652F625</ref>.
    </desc>
    <details>
      Model of <ref>concept_ForwardIterator_4C777D423CF589B8535F29F910C025990ED656D4</ref>.
    </details>
  </doc>
  <doc id="class_Stack_CAB2AD063212443437B477BD815360F469912604">
    <desc>
      A last-in-first-out container of elements implemented as a <ref>class_List_C2E3BBDCA5D627AF0AC4163C9A548892D736E894</ref>.
    </desc>
    <details>
      Pushing an element to the top of the stack takes amortized constant time. Popping an element from the top of the stack is <em>O(1)</em> operation.
    </details>
  </doc>
  <doc id="class_Queue_F0FF1F7FEDEB5A065595E4EC4CFE4E1E748FA14F">
    <desc>
      A first-in-first-out container of elements implemented as a <ref>class_LinkedList_21E6EE98B4B36A5C47A5B085A267CB263D18975A</ref>.
    </desc>
    <details>
      Putting an element to the end of the queue takes constant time. Getting an element from the start of the queue takes constant time.
    </details>
  </doc>
  <doc id="class_Bitset_BA1EE2E68426C5445CB6CAF7F957084ADAFD19CA">
    <desc>
      A variable length container of bits implemented as a <ref>class_List_C2E3BBDCA5D627AF0AC4163C9A548892D736E894</ref> of ulongs.
    </desc>
    <details>
      Setting, resetting and accessing a bit takes constant time.
    </details>
  </doc>

  <doc id="concept_Container_0A128B13B9494DFD21086D34DFB070EAA26D473A">
    <desc>
      A collection of elements that provides iterators, element count and empty predicate.
    </desc>
  </doc>
  <doc id="concept_BackInsertionSequence_5885D2D8DDEC40D462924E37DCE754A8F36B52C2">
    <desc>
      A <ref>concept_Container_0A128B13B9494DFD21086D34DFB070EAA26D473A</ref> having an <em>Add</em> operation that appends an element to the end of the container.
    </desc>
    <details title="Examples">
      <ref>class_List_C2E3BBDCA5D627AF0AC4163C9A548892D736E894</ref>,
      <ref>class_LinkedList_21E6EE98B4B36A5C47A5B085A267CB263D18975A</ref>.
    </details>
  </doc>
  <doc id="concept_FrontInsertionSequence_6E92B081B326D22C296036E5DDC43365491BEBF4">
    <desc>
      A <ref>concept_Container_0A128B13B9494DFD21086D34DFB070EAA26D473A</ref> having an <em>InsertFront</em> operation that inserts an element to the beginning of the container.
    </desc>
    <details title="Examples">
      <ref>class_List_C2E3BBDCA5D627AF0AC4163C9A548892D736E894</ref>,
      <ref>class_LinkedList_21E6EE98B4B36A5C47A5B085A267CB263D18975A</ref>,
      <ref>class_ForwardList_A99897CAB3009D26DA55AC8644BAE9940652F625</ref>.
    </details>
  </doc>
  <doc id="concept_InsertionSequence_5D1868A305E1B5BDA144AAB9338B802BCE110BE6.html">
    <desc>
      A <ref>concept_Container_0A128B13B9494DFD21086D34DFB070EAA26D473A</ref> having an <em>Insert</em> operation that inserts an element in the middle of the container.
    </desc>
    <details title="Examples">
      <ref>class_List_C2E3BBDCA5D627AF0AC4163C9A548892D736E894</ref>,
      <ref>class_LinkedList_21E6EE98B4B36A5C47A5B085A267CB263D18975A</ref>.
    </details>
  </doc>
  <doc id="concept_ForwardContainer_98A0A5CEE1E1C33CCABCFC2F31BF6EE7C21229F2">
    <desc>
      A <ref>concept_Container_0A128B13B9494DFD21086D34DFB070EAA26D473A</ref> whose iterators are <ref>concept_ForwardIterator_4C777D423CF589B8535F29F910C025990ED656D4</ref>s.
    </desc>
    <details title="Examples">
      <ref>class_ForwardList_A99897CAB3009D26DA55AC8644BAE9940652F625</ref>.
      <ref>class_HashSet_96FD1A8AB2C77DDB74D29FB1E173D4D08CFD50A3</ref>.
    </details>
  </doc>
  <doc id="concept_BidirectionalContainer_05A591605B349EDF6FDA457C4C7B21759F8E2BC7">
    <desc>
      A <ref>concept_Container_0A128B13B9494DFD21086D34DFB070EAA26D473A</ref> whose iterators are <ref>concept_BidirectionalIterator_96C10B73881A17B6DC9C0804E7DF2141C2E58DA6</ref>s.
    </desc>
    <details title="Examples">
      <ref>class_LinkedList_21E6EE98B4B36A5C47A5B085A267CB263D18975A</ref>,
      <ref>class_Set_A458D7CE6492B895868A21E8F3D1FA98A8FFEAA3</ref>,
      <ref>class_Map_5EAECC14EAC094F5DF9869C5DC52FED957926043</ref>.
    </details>
  </doc>
  <doc id="concept_RandomAccessContainer_7D44EBDB629CA332A20056356A52519C0BB1FADF">
    <desc>
      A <ref>concept_Container_0A128B13B9494DFD21086D34DFB070EAA26D473A</ref> whose iterators are <ref>concept_RandomAccessIterator_A5A1B6A4EC8E181A67C733002B3BE437554D3484</ref>s.
    </desc>
    <details title="Examples">
      <ref>class_List_C2E3BBDCA5D627AF0AC4163C9A548892D736E894</ref>.
    </details>
  </doc>
  <doc id="concept_TrivialIterator_63C9CBDE8700FA0C9E6E0CA6C6C65B5DA24A13E5">
    <desc>
      An iterator is generalization of a pointer. An iterator may have limitations regarding how it can move.
    </desc>
  </doc>
  <doc id="concept_ForwardIterator_4C777D423CF589B8535F29F910C025990ED656D4">
    <desc>
      An iterator that can move forwards.
    </desc>
    <details title="Examples">
      <ref>class_ForwardListNodeIterator_7AAFDC28F05E51C20CA3EB8A7148DDD64A2EAF99</ref>,
      <ref>class_LinkedListNodeIterator_8295384D975538AF58E04CACCB241458E5E9892B</ref>,
      <ref>class_RandomAccessIter_9F7709A9CDA8A631401243519F438AE84A725134</ref>.
    </details>
  </doc>
  <doc id="concept_BidirectionalIterator_96C10B73881A17B6DC9C0804E7DF2141C2E58DA6">
    <desc>
      An iterator that can move forwards and backwards.
    </desc>
    <details title="Examples">
      <ref>class_LinkedListNodeIterator_8295384D975538AF58E04CACCB241458E5E9892B</ref>,
      <ref>class_RandomAccessIter_9F7709A9CDA8A631401243519F438AE84A725134</ref>.
    </details>
  </doc>
  <doc id="concept_RandomAccessIterator_A5A1B6A4EC8E181A67C733002B3BE437554D3484">
    <desc>
      An iterator that can move arbitrary offsets.
    </desc>
    <details title="Examples">
      <ref>class_RandomAccessIter_9F7709A9CDA8A631401243519F438AE84A725134</ref>.
    </details>
  </doc>
  <doc id="concept_Semiregular_E2C46E5F0F7E452605B56E425903C7CB77E861C7">
    <desc>
      A type that can be default constructed and either copied or moved or both.
    </desc>
    <details title="Examples">
      <strong>int</strong>, <ref>class_String_E0865F4A81B4C745FF2074A1872C8A6EBABC5537</ref>, <ref>class_List_C2E3BBDCA5D627AF0AC4163C9A548892D736E894</ref>.
    </details>
  </doc>
  <doc id="concept_Regular_A56EC84F9A51535281FA2B6B074E90F9B3BBCCC1">
    <desc>
      A <ref>concept_Semiregular_E2C46E5F0F7E452605B56E425903C7CB77E861C7</ref> type that can be compared for equality and inequality.
    </desc>
    <details title="Examples">
      <strong>int</strong>, <ref>class_String_E0865F4A81B4C745FF2074A1872C8A6EBABC5537</ref>, <ref>class_List_C2E3BBDCA5D627AF0AC4163C9A548892D736E894</ref>.
    </details>
  </doc>
  <doc id="concept_EqualityComparable_CBC8491006C76A67817EB0837FEB706E443E77B6">
    <desc>
      A type whose objects can be compared with operators == and !=.
    </desc>
    <details title="Examples">
      <strong>int</strong>, <ref>class_String_E0865F4A81B4C745FF2074A1872C8A6EBABC5537</ref>, <ref>class_List_C2E3BBDCA5D627AF0AC4163C9A548892D736E894</ref>.
    </details>
  </doc>
  <doc id="concept_LessThanComparable_90ED44B8D61617C1FB8517CD74D7D087E77A0AA5">
    <desc>
      A type whose objects can be compared with operators &lt;, &gt;, &lt;= and &gt;=.
    </desc>
    <details title="Examples">
      <strong>int</strong>, <ref>class_String_E0865F4A81B4C745FF2074A1872C8A6EBABC5537</ref>, <ref>class_List_C2E3BBDCA5D627AF0AC4163C9A548892D736E894</ref>.
    </details>
  </doc>
  <doc id="concept_TotallyOrdered_E99156F9F67A4CDD40DFE7EAC64E14E2CF6B24F2">
    <desc>
      A <ref>concept_Regular_A56EC84F9A51535281FA2B6B074E90F9B3BBCCC1</ref> type whose objects can be compared with operators &lt;, &gt;, &lt;= and &gt;=.
    </desc>
    <details title="Examples">
      <strong>int</strong>, <ref>class_String_E0865F4A81B4C745FF2074A1872C8A6EBABC5537</ref>, <ref>class_List_C2E3BBDCA5D627AF0AC4163C9A548892D736E894</ref>.
    </details>
  </doc>
  <doc id="concept_UnaryFunction_DDD936ABC21BA268C3B3C9F4820F5DFE1ACAA344">
    <desc>
      A function object whose function call operator has one parameter.
    </desc>
    <details title="Examples">
      <ref>class_Negate_601951129A9208F4A372E2B7BBC4EAE820AD2ECB</ref>,
      <ref>class_Identity_AE4E1A34351D4CA127046281E036550E4FE428D6</ref>.
    </details>
  </doc>
  <doc id="concept_UnaryPredicate_817CC9DCD26C0954E03389EC0C9357DB1879C53F">
    <desc>
      A Boolean-valued <ref>concept_UnaryFunction_DDD936ABC21BA268C3B3C9F4820F5DFE1ACAA344</ref> object.
    </desc>
    <details title="Examples">
      <ref>class_LogicalNot_85BFDF2D929BE885FA1885895863E547919C2FDF</ref>.
    </details>
  </doc>
  <doc id="concept_UnaryOperation_A42C7312D25FC827BE924605B8EB6CAF29F5668A">
    <desc>
      A <ref>concept_UnaryFunction_DDD936ABC21BA268C3B3C9F4820F5DFE1ACAA344</ref> object where
      the return type and the parameter type of the function call operator are the same type.
    </desc>
    <details title="Examples">
      <ref>class_Negate_601951129A9208F4A372E2B7BBC4EAE820AD2ECB</ref>,
      <ref>class_Identity_AE4E1A34351D4CA127046281E036550E4FE428D6</ref>.
    </details>
  </doc>
  <doc id="concept_BinaryFunction_7F3A6EF707F08A997487EC3748D74CC2156DB250">
    <desc>
      A function object whose function call operator has two parameters.
    </desc>
    <details title="Examples">
      <ref>class_Plus_43AEB018E2FF5F2BA1897067D84435B9265F5F20</ref>, <ref>class_Minus_9530187FA20A7AAB6E1CE58BA93A69A1B3956FC7</ref>,
      <ref>class_Multiplies_570F0D74E3904749989DAA95B6BD40B57C57A11B</ref>.
    </details>
  </doc>
  <doc id="concept_BinaryPredicate_47B7E65D192BA156398E605E540F0BEF2A7473D7">
    <desc>
      A Boolean-valued <ref>concept_BinaryFunction_7F3A6EF707F08A997487EC3748D74CC2156DB250</ref> object.
    </desc>
    <details title="Examples">
      <ref>class_EqualTo_FE4C0B1CEF8E306FE146F7BB46ED2BCED3E4472A</ref>,
      <ref>class_Less_A69C22196F2BDC27EC6CEF8AFB85C890EDE77C57</ref>-
    </details>
  </doc>
  <doc id="concept_BinaryOperation_E7FA71F85EB4750A92189AC872008306AEFD4D01">
    <desc>
      A <ref>concept_BinaryFunction_7F3A6EF707F08A997487EC3748D74CC2156DB250</ref> object where
      the return type and the first parameter type of the function call operator are the same type.
    </desc>
    <details title="Examples">
      <ref>class_Plus_43AEB018E2FF5F2BA1897067D84435B9265F5F20</ref>, <ref>class_Minus_9530187FA20A7AAB6E1CE58BA93A69A1B3956FC7</ref>,
      <ref>class_Multiplies_570F0D74E3904749989DAA95B6BD40B57C57A11B</ref>.
    </details>
  </doc>
  <doc id="concept_Relation_EA6D5281439518EB11DD9152636FEB86745EE746">
    <desc>
      A <ref>concept_BinaryPredicate_47B7E65D192BA156398E605E540F0BEF2A7473D7</ref> that has two parameters of the same type and provides a typedef named <strong>Domain</strong>.
      The domain of the relation is the type of the parameters.
    </desc>
    <details title="Examples">
      <ref>class_EqualTo_FE4C0B1CEF8E306FE146F7BB46ED2BCED3E4472A</ref>,
      <ref>class_Less_A69C22196F2BDC27EC6CEF8AFB85C890EDE77C57</ref>-
    </details>
  </doc>
  <doc id="concept_DefaultConstructible_928F89FC5607554E7244359D8FE40432C96E53DC">
    <desc>
      Requires a type to have a user defined or compiler generated default constructor or be of a basic type.
    </desc>
  </doc>

  <doc id="concept_CopyConstructible_B11BFA55AF39E78A7C14C35837E65D9DD09586C3">
    <desc>
      Requires a type to have a user defined or compiler generated copy constructor or be of a basic type.
      A compiler can generate a copy constructor if the class has no suppressed copy constructor and no member variables of a move-only type.
    </desc>
  </doc>

  <doc id="concept_MoveConstructible_21D36F4E96F5E3072DD6AAB34A26DF5F90FBC262">
    <desc>
      Requires a type to have a user defined or compiler generated move constructor or be of a basic type.
    </desc>
  </doc>

  <doc id="concept_Common_1761C757BC631D15B26D64D830742878B5E7D7F6">
    <desc>
      Requires type arguments T and U to have a common type.
      If they have a common type, that type is bound to <strong>CommonType</strong> symbol that can be used for example in concepts that refine this concept.
    </desc>
    <details>
      Types T and U have a common type if the types T and U are exactly the same type,
      type T is implicitly convertible to type U, or type U is implicitly convertible to type U.
      In the first case the common type will be T, in the second case it will be U and in the third case it will be T.
    </details>
  </doc>
  <doc id="concept_Convertible_AAB8D8212C044B986438CA17EF4CDDF789ADEB81">
    <desc>
      Requires type T to be implicitly convertible to type U.
    </desc>
  </doc>
  <doc id="concept_Derived_1AE2C34004233D6F2058B816173F55CEC6320552">
    <desc>
      Requires a class type T to derive from a class type U.
    </desc>
  </doc>
  <doc id="concept_ExplicitlyConvertible_2C98F7453D3880C7655E44A9545F7CD4CDD591FA">
    <desc>
      Requires type T to be explicitly convertible to type U. If type T is explicitly convertible to U, it can be casted to U.
    </desc>
  </doc>
  <doc id="concept_Same_DBCFA3D7303B9F160493F695D4DCB6973FFF06E3">
    <desc>
      Requires type T to be exactly the same type as U.
    </desc>
  </doc>
  <doc id="concept_NonreferenceType_9BD78EA2665D4260E5514999AD8FCEA945606407">
    <desc>
      Requires type T to be a non-reference type.
    </desc>
  </doc>

  <doc id="class_Process_6FDB48284B5FF1E26D28956730DFB867F0A83291">
    <desc>
       A class for executing a process and reading and writing its standard output, input and error.
    </desc>
    <details>
        This <a href="../../../../code/cmdoc/content/ProcessTest/file/ProcessTest.cm.html">process test</a> 
        example shows how to start a process using the Process class and read its standard output and error.
    </details>
  </doc>

  <doc id="ns_System.Threading">
    <desc>
      The System.Threading namespace contains basic threading support: threads, mutexes and condition variables.
      It also contains support for processes and fibers.
    </desc>
    <details title="Examples">
      This <a href="../../../../code/threading/cmdoc/content/ThreadFunction/file/threadFunction.cm.html">threadFunction</a> example shows how to execute a function
      in a separate thread. Main function starts a thread that executes the <em>ThreadFunction</em> function, and waits the thread to end by calling the
      <ref>member_function_Join_Thread_C1E6CF2687F911D52C3B3495CBA24C906969A6A2</ref> member function of the started thread.
    </details>
    <details>
      This <a href="../../../../code/threading/cmdoc/content/threadSynchronization/file/threadSynchronization.cm.html">threadSynchronization</a> example
      shows how to use <ref>class_LockGuard_250D7F4BB3E486F66F913150653C543998ECC408</ref>, <ref>class_RecursiveMutex_B9ED5479754BBDDED6A4491348BBD2F20F701D82</ref>
      and a <ref>class_ConditionVariable_019A80625043CF98EC88D8F55238C84CFD4A9C26</ref> to synchronize threads.
      The main function starts first the <em>Run</em> member function of the
      <a href="../../../../code/threading/cmdoc/content/threadSynchronization/doc/class_OutputCollector_F50BD3675C56D181C6A581CCED8948E4B4700615.html">OutputCollector</a>
      class in a separate thread. Then it queries the number of cores by calling the
      <ref>function_HardwareConcurrency_1205CA22BE5F7C8523C7C99C25B03568E302190F</ref> function, and starts twice as many output threads.
      The output threads enqueue message lines by calling the <em>EnqueueLine</em> member function of the
      <a href="../../../../code/threading/cmdoc/content/threadSynchronization/doc/class_OutputCollector_F50BD3675C56D181C6A581CCED8948E4B4700615.html">OutputCollector</a>.
      Finally main thread <ref>member_function_Join_Thread_C1E6CF2687F911D52C3B3495CBA24C906969A6A2</ref>s the output threads and the output collector thread.
    </details>
  </doc>
  <doc id="member_function_Join_Thread_2321207B993A5A106E72F80F93CBAD2DA409A166">
    <desc>
        Waits a thread to end. If the thread is not joinable, // TODO
    </desc>
  </doc>
  <doc id="member_function_NotifyAll_ConditionVariable_2CAF36B95B161BDAF58DE556C3363A2E94D6BDA5">
	<desc>
		Signals the condition variable and unblocks all threads waiting on it.
	</desc>
  </doc>
  <doc id="member_function_NotifyOne_ConditionVariable_EABB7DC0EB9BEA63213AC1752680C80DEB6256C0">
	<desc>
		Signals the condition variable and unblocks one thread waiting on it.
	</desc>
  </doc>
  <doc id="member_function_Wait_ConditionVariable_249E26197A29EE7C39629CB8CABEBB2802C19D3E">
	<desc>
		Locks the given recursive mutex internally and waits the condition variable to become signaled. The waiting is done with the recursive mutex unlocked.
	</desc>
	<details>
		After the call the recursive mutex is unlocked.
	</details>
  </doc>
  <doc id="member_function_Wait_ConditionVariable_4153CA08186BDB6B1E2F002F2B9E464DDA53ECE9">
	<desc>
		Locks the given recursive mutex internally and waits until the given predicate returns true. The waiting is done with the recursive mutex unlocked.
	</desc>
	<details>
		The predicate is called with the given void* argument that can be null.
		After the call the recursive mutex is unlocked.
	</details>
  </doc>
  <doc id="member_function_Wait_ConditionVariable_64FC4ED39209427EE3AC09E4BC57A466F3C51F93">
	<desc>
		Locks the given recursive mutex internally and waits until the given predicate method returns true. The waiting is done with the recursive mutex unlocked.
	</desc>
	<details>
		The predicate method is called with the given void* argument that can be null.
		After the call the recursive mutex is unlocked.
	</details>
  </doc>
  <doc id="member_function_WaitFor_ConditionVariable_0E06BC7E9837DF66A41C1BB043C49C33E0FB807A">
	<desc>
		Locks the given recursive mutex internally and waits until duration has been elapsed or the condition variable has become signaled. The waiting is done with the recursive mutex unlocked.
	</desc>
	<details>
		Returns true if the condition variable has become signaled and the predicate returns true.
		Returns false if the condition variable has not become signaled after duration has been elapsed.
		The predicate is called with the given void* argument that can be null.
		After the call the recursive mutex is unlocked.
	</details>
  </doc>
  <doc id="member_function_WaitFor_ConditionVariable_A2D7E0AB67ECEDB3BBFF8D11B4F46B77A782B4B7">
	<desc>
		Locks the given recursive mutex internally and waits until duration has been elapsed or the condition variable has become signaled. The waiting is done with the recursive mutex unlocked.
	</desc>
	<details>
		Returns true if the condition variable has become signaled and the predicate method returns true.
		Returns false if the condition variable has not become signaled after duration has been elapsed.
		The predicate method is called with the given void* argument that can be null.
		After the call the recursive mutex is unlocked.
	</details>
  </doc>
  <doc id="member_function_WaitFor_ConditionVariable_ED26DDEF0165DCB23E6F69C4AE81B33B48870612">
	<desc>
		Locks the given recursive mutex internally and waits until duration has been elapsed or the condition variable has become signaled. The waiting is done with the recursive mutex unlocked.
	</desc>
	<details>
		Returns ConditionVariableStatus.no_timeout if the condition variable has become signaled.
		Returns ConditionVariableStatus.timeout if the condition variable has not become signaled after duration has been elapsed.
		After the call the recursive mutex is unlocked.
	</details>
  </doc>
  <doc id="member_function_WaitUntil_ConditionVariable_CD4EBCBE79373D7B69949B69BDC0CE0E09AB2B8E">
	<desc>
		Locks the given recursive mutex internally and waits until time point tp has been reached or the condition variable has become signaled. The waiting is done with the recursive mutex unlocked.
	</desc>
	<details>
		Returns true if the condition variable has become signaled and the predicate method returns true.
		Returns false if the condition variable has not become signaled after time point tp has been reached.
		The predicate is called with the given void* argument that can be null.
		After the call the recursive mutex is unlocked.
	</details>
  </doc>
  <doc id="member_function_WaitUntil_ConditionVariable_7CC6D6FABCE1028C8DC9023ED8429D88631CA606">
	<desc>
		Locks the given recursive mutex internally and waits until time point tp has been reached or the condition variable has become signaled. The waiting is done with the recursive mutex unlocked.
	</desc>
	<details>
		Returns true if the condition variable has become signaled and the predicate method returns true.
		Returns false if the condition variable has not become signaled after time point tp has been reached.
		The predicate method is called with the given void* argument that can be null.
		After the call the recursive mutex is unlocked.
	</details>
  </doc>
  <doc id="member_function_WaitUntil_ConditionVariable_AC1FB48FBB6C3A4AF52EADD98D6EDF72A6956972">
	<desc>
		Locks the given recursive mutex internally and waits until time point tp has been reached or the condition variable has become signaled. The waiting is done with the recursive mutex unlocked.
	</desc>
	<details>
		Returns ConditionVariableStatus.no_timeout if the condition variable has become signaled.
		Returns ConditionVariableStatus.timeout if the condition variable has not become signaled after time point tp has been reached.
		After the call the recursive mutex is unlocked.
	</details>
  </doc>
  
  <doc id="System.Runtime">
    <desc>
      The System.Runtime module contains symbols for functions that form the lowest level of the Cmajor runtime library.
      The functions themselves are defined in libraries written in C++.
    </desc>
  </doc>

  <doc id="System.Core">
    <desc>
      The System.Core module contains primitive types, operations for primitive types, intrinsic functions and intrinsic concepts known by the compiler.
      It does not have any source code.
    </desc>>
  </doc>

  <doc id="class_MemoryWriter_BC3E557B84654B5DB52F9A019B7E85AF4A0D7C48">
    <desc>
      A class for writing data in binary form to a block of memory. The data is written in big-endian byte order.
    </desc>
  </doc>
  <doc id="class_MemoryReader_7C2B5BA19453DDDA4428C8201D93E07311596E12">
    <desc>
      A class for reading data in binary form from a block of memory. The data is expected to be in big-endian byte order.
    </desc>
  </doc>
  <doc id="member_function_ReadByte_Stream_EB804D3E1DFABC1CAAA5E911DE5D989C3D1FB588">
    <desc>
      If at the end of the stream returns a result containing -1, otherwise reads a byte from the stream and returns a result that contains it.
      In case of an error returns an error result.
    </desc>
  </doc>
  <doc id="member_function_ReadByte_FileStream_71156A4D45D7DF2AA25E2CFAF8A4C91A39CD34DF">
    <desc>
      If at the end of the stream returns a result containing -1, otherwise reads a byte from the stream and returns a result that contains it.
      In case of an error returns an error result.
    </desc>
  </doc>
  <doc id="member_function_ReadByte_BufferedStream_D21B200A7FD5BB16D845831DDA3DDA69BAF3A60D">
    <desc>
      If at the end of the stream returns a result containing -1, otherwise if has buffered bytes, returns a result containing the next buffered byte, 
      otherwise fills the buffer and returns a result containing the next buffered byte.
      In case of an error returns an error result.
    </desc>
  </doc>
  <doc id="member_function_ReadByte_MemoryStream_9B6EED5D584D4A6806293D4E810DF24FC4D60A48">
    <desc>
      If at the end of the stream returns a result containing -1, otherwise returns a result that contains the byte read from the 'readPos' content location.
    </desc>
  </doc>
  <doc id="member_function_ReadByte_NetworkStream_C8C3BCC6DB9C6947A69F479B11DFAD259457A01C">
    <desc>
      If at the end of the stream returns a result containing -1, otherwise returns a result that contains the next byte read from the socket.
      In case of an error returns an error result.
    </desc>
  </doc>
  <doc id="member_function_ReadByte_DeflateStream_E8027D714F71B7C08E0568E8F392606F7C2DCF0A">
    <desc>
      If at the end of the stream returns a result containing -1, otherwise returns a result that contains the next uncompressed byte.
    </desc>
  </doc>
  <doc id="function_Sort_B69A17D108D37F52F76C89E93A071E98D4316261">
    <desc>
      Sorts a range of elements with respect to a relation.
    </desc>
    <details>
      The range must be defined by two random access iterators and the element type must be copyable.
      If the number of elements in the range is less than or equal to <ref>constant_insertionSortThreshold_56F85BEA8266D9529E96B6415FF32EC6B8AB62C5</ref>
      sorts the elements using <ref>function_InsertionSort_DAB06B7BFD64D40675CA84057B703C3B4C534755</ref>,
      otherwise sorts them using <ref>function_QuickSort_69A6F4919BF3D252BCD209583330F66DF9EA5806</ref>.
    </details>
  </doc>
  <doc id="function_Sort_EF32C4020F3A981412DA6D8D74326E57C67DBD4C">
    <desc>
      Sorts a range of elements with respect to a relation.
    </desc>
    <details>
      The range must be defined by two random access iterators and the element type can be a move-only type.
      Sorts the elements using <ref>function_InsertionSort_DAB06B7BFD64D40675CA84057B703C3B4C534755</ref>.
    </details>
  </doc>
  <doc id="function_Sort_C9A173F20B11020769C780AF6DCA83382513E394">
    <desc>
      Sorts a range of elements with respect to the less than relation.
    </desc>
    <details>
      Delegates sorting to this <ref>function_Sort_B69A17D108D37F52F76C89E93A071E98D4316261</ref> or this <ref>function_Sort_EF32C4020F3A981412DA6D8D74326E57C67DBD4C</ref>
      function regarding whether the element type is copyable or not.
    </details>
  </doc>
  <doc id="function_Sort_D659DB603D990251C11BDB5212F9BE088CD9D842">
    <desc>
      Sorts a random access container with respect to a relation.
    </desc>
    <details>
      Delegates sorting to this <ref>function_Sort_B69A17D108D37F52F76C89E93A071E98D4316261</ref> or this <ref>function_Sort_EF32C4020F3A981412DA6D8D74326E57C67DBD4C</ref>
      function regarding whether the element type is copyable or not.
    </details>
  </doc>
  <doc id="function_Sort_7C73E3E1EEACFDE0A07AA0DF6F0DFE4B25935987">
    <desc>
      Sorts a random access container with respect to the less than relation.
    </desc>
    <details>
      Delegates sorting to this <ref>function_Sort_C9A173F20B11020769C780AF6DCA83382513E394</ref> function.
    </details>
  </doc>
  <doc id="function_Sort_D5E0D4CCA744D7C9467BD4BD5F0263CFC967F67D">
    <desc>
      Sorts a forward container with respected to a relation by copying the forward container to a <ref>class_List_C2E3BBDCA5D627AF0AC4163C9A548892D736E894</ref>,
      sorting the list and then copying elements back to the forward container.
    </desc>
    <details>
      Delegates sorting to this <ref>function_Sort_D659DB603D990251C11BDB5212F9BE088CD9D842</ref> function.
    </details>
  </doc>
  <doc id="function_Sort_1060E96646527D20A7A7F3864F1DAF6250E6E24C">
    <desc>
      Sorts a forward container with respected to the less than relation by copying the forward container to a <ref>class_List_C2E3BBDCA5D627AF0AC4163C9A548892D736E894</ref>,
      sorting the list and then copying elements back to the forward container.
    </desc>
    <details>
      Delegates sorting to this <ref>function_Sort_7C73E3E1EEACFDE0A07AA0DF6F0DFE4B25935987</ref> function.
    </details>
  </doc>
</docs>
